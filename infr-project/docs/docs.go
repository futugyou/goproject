// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/platform": {
            "get": {
                "description": "get all platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "get all platform",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/platform.Platform"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "create platform",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewmodels.CreatePlatformRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/platform.Platform"
                        }
                    }
                }
            }
        },
        "/platform/{id}": {
            "get": {
                "description": "get platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "get platform",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Platform ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/platform.Platform"
                        }
                    }
                }
            },
            "put": {
                "description": "update platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "update platform",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Platform ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewmodels.UpdatePlatformRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/platform.Platform"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "delete platform",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Platform ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/platform.Platform"
                        }
                    }
                }
            }
        },
        "/platform/{id}/project": {
            "post": {
                "description": "create platform webhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "create platform webhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Platform ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewmodels.UpdatePlatformProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/platform.Platform"
                        }
                    }
                }
            }
        },
        "/platform/{id}/project/{project_id}": {
            "put": {
                "description": "update platform project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "update platform project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Platform ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Platform Project ID",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewmodels.UpdatePlatformProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/platform.Platform"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete platform project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "delete platform project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Platform ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Platform Project ID",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/platform.Platform"
                        }
                    }
                }
            }
        },
        "/platform/{id}/project/{project_id}/hook": {
            "put": {
                "description": "update platform webhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "update platform webhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Platform ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Platform Project ID",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewmodels.UpdatePlatformWebhookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/platform.Platform"
                        }
                    }
                }
            }
        },
        "/project": {
            "get": {
                "description": "get all project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get all project",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/project.Project"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "create project",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewmodels.CreateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.Project"
                        }
                    }
                }
            }
        },
        "/project/{id}": {
            "get": {
                "description": "get project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "get project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.Project"
                        }
                    }
                }
            },
            "put": {
                "description": "update project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "update project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewmodels.UpdateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.Project"
                        }
                    }
                }
            }
        },
        "/project/{id}/design": {
            "put": {
                "description": "update project design",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "update project design",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodels.UpdateProjectDesignRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.Project"
                        }
                    }
                }
            }
        },
        "/project/{id}/platform": {
            "put": {
                "description": "update project platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "update project platform",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodels.UpdateProjectPlatformRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/project.Project"
                        }
                    }
                }
            }
        },
        "/resource": {
            "get": {
                "description": "get all resources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "get all resources",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/viewmodels.ResourceDetail"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create resource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "create resource",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewmodels.CreateResourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resource.Resource"
                        }
                    }
                }
            }
        },
        "/resource/{id}": {
            "get": {
                "description": "get resource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "get resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/viewmodels.ResourceDetail"
                        }
                    }
                }
            },
            "put": {
                "description": "update resource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "update resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/viewmodels.UpdateResourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete resource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "delete resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/resource/{id}/history": {
            "get": {
                "description": "get resource history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "get resource history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/resource.Resource"
                            }
                        }
                    }
                }
            }
        },
        "/test/circleci": {
            "get": {
                "description": "circle CI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "circle CI",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/test/ping": {
            "get": {
                "description": "ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/test/tf": {
            "get": {
                "description": "terraform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "terraform",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/test/vault": {
            "get": {
                "description": "vault",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "vault",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/secret_service.OpenAppSecretOK"
                        }
                    }
                }
            }
        },
        "/test/vercel": {
            "get": {
                "description": "vercel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "vercel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/test/workflow": {
            "get": {
                "description": "workflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test"
                ],
                "summary": "workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "github owner",
                        "name": "owner",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "github repository",
                        "name": "repo",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Secrets20230613OpenAppSecretResponse": {
            "type": "object",
            "properties": {
                "secret": {
                    "description": "secret",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Secrets20230613OpenSecret"
                        }
                    ]
                }
            }
        },
        "models.Secrets20230613OpenSecret": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "created at\nFormat: date-time",
                    "type": "string"
                },
                "created_by": {
                    "description": "created by",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Secrets20230613Principal"
                        }
                    ]
                },
                "latest_version": {
                    "description": "latest version",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "sync_status": {
                    "description": "sync status",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/models.Secrets20230613SyncStatus"
                    }
                },
                "version": {
                    "description": "version",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Secrets20230613OpenSecretVersion"
                        }
                    ]
                }
            }
        },
        "models.Secrets20230613OpenSecretVersion": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "created at\nFormat: date-time",
                    "type": "string"
                },
                "created_by": {
                    "description": "created by",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Secrets20230613Principal"
                        }
                    ]
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "value": {
                    "description": "value",
                    "type": "string"
                },
                "version": {
                    "description": "version",
                    "type": "string"
                }
            }
        },
        "models.Secrets20230613Principal": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                }
            }
        },
        "models.Secrets20230613SyncStatus": {
            "type": "object",
            "properties": {
                "last_error_code": {
                    "description": "last error code",
                    "type": "string"
                },
                "status": {
                    "description": "status",
                    "type": "string"
                },
                "updated_at": {
                    "description": "updated at\nFormat: date-time",
                    "type": "string"
                }
            }
        },
        "platform.Platform": {
            "type": "object",
            "properties": {
                "activate": {
                    "type": "boolean"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "projects": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/platform.PlatformProject"
                    }
                },
                "property": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "rest_endpoint": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "platform.PlatformProject": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "property": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                },
                "webhooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/platform.Webhook"
                    }
                }
            }
        },
        "platform.Webhook": {
            "type": "object",
            "properties": {
                "activate": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "property": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "state": {},
                "url": {
                    "type": "string"
                }
            }
        },
        "project.Project": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "designs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/project.ProjectDesign"
                    }
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "platforms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/project.ProjectPlatform"
                    }
                },
                "start_date": {
                    "type": "string"
                },
                "state": {},
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "project.ProjectDesign": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resources": {
                    "description": "ref resource.Resource",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "project.ProjectPlatform": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "description": "ref platform.PlatformProject",
                    "type": "string"
                }
            }
        },
        "resource.Resource": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {},
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "secret_service.OpenAppSecretOK": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/definitions/models.Secrets20230613OpenAppSecretResponse"
                }
            }
        },
        "viewmodels.CreatePlatformRequest": {
            "type": "object",
            "required": [
                "name",
                "rest",
                "url"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "property": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "rest": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "viewmodels.CreateProjectRequest": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 3
                },
                "end_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "start_time": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "preparing",
                        "processing",
                        "finished"
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "viewmodels.CreateResourceRequest": {
            "type": "object",
            "required": [
                "data",
                "name"
            ],
            "properties": {
                "data": {
                    "type": "string",
                    "minLength": 3
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "DrawIO",
                        "Markdown",
                        "Excalidraw",
                        "Plate"
                    ]
                }
            }
        },
        "viewmodels.ResourceDetail": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "viewmodels.UpdatePlatformProjectRequest": {
            "type": "object",
            "required": [
                "name",
                "url"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "property": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "viewmodels.UpdatePlatformRequest": {
            "type": "object",
            "required": [
                "name",
                "rest",
                "url"
            ],
            "properties": {
                "activate": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "property": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "rest": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "viewmodels.UpdatePlatformWebhookRequest": {
            "type": "object",
            "required": [
                "activate",
                "name",
                "url"
            ],
            "properties": {
                "activate": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "property": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "Init",
                        "Creating",
                        "Ready"
                    ]
                },
                "url": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "viewmodels.UpdateProjectDesignRequest": {
            "type": "object",
            "required": [
                "name",
                "resources"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 3
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "viewmodels.UpdateProjectPlatformRequest": {
            "type": "object",
            "required": [
                "name",
                "project_id"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 3
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "project_id": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "viewmodels.UpdateProjectRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 3
                },
                "end_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "start_time": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "preparing",
                        "processing",
                        "finished"
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "viewmodels.UpdateResourceRequest": {
            "type": "object",
            "required": [
                "data",
                "name"
            ],
            "properties": {
                "data": {
                    "type": "string",
                    "minLength": 3
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
