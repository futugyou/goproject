definitions:
  command.CreatePlatformCommand:
    properties:
      name:
        maxLength: 50
        minLength: 3
        type: string
      property:
        additionalProperties:
          $ref: '#/definitions/command.PropertyInfo'
        type: object
      rest:
        maxLength: 50
        minLength: 3
        type: string
      tags:
        items:
          type: string
        type: array
      url:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - name
    - rest
    - url
    type: object
  command.PropertyInfo:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  models.Secrets20230613OpenAppSecretResponse:
    properties:
      secret:
        allOf:
        - $ref: '#/definitions/models.Secrets20230613OpenSecret'
        description: secret
    type: object
  models.Secrets20230613OpenSecret:
    properties:
      created_at:
        description: |-
          created at
          Format: date-time
        type: string
      created_by:
        allOf:
        - $ref: '#/definitions/models.Secrets20230613Principal'
        description: created by
      created_by_id:
        description: created by id
        type: string
      latest_version:
        description: latest version
        type: string
      name:
        description: name
        type: string
      sync_status:
        additionalProperties:
          $ref: '#/definitions/models.Secrets20230613SyncStatus'
        description: sync status
        type: object
      version:
        allOf:
        - $ref: '#/definitions/models.Secrets20230613OpenSecretVersion'
        description: version
    type: object
  models.Secrets20230613OpenSecretVersion:
    properties:
      created_at:
        description: |-
          created at
          Format: date-time
        type: string
      created_by:
        allOf:
        - $ref: '#/definitions/models.Secrets20230613Principal'
        description: created by
      created_by_id:
        description: created by id
        type: string
      type:
        description: type
        type: string
      value:
        description: value
        type: string
      version:
        description: version
        type: string
    type: object
  models.Secrets20230613Principal:
    properties:
      email:
        description: email
        type: string
      name:
        description: name
        type: string
      type:
        description: type
        type: string
    type: object
  models.Secrets20230613SyncStatus:
    properties:
      last_error_code:
        description: last error code
        type: string
      status:
        description: status
        type: string
      updated_at:
        description: |-
          updated at
          Format: date-time
        type: string
    type: object
  secret_service.OpenAppSecretOK:
    properties:
      payload:
        $ref: '#/definitions/models.Secrets20230613OpenAppSecretResponse'
    type: object
  viewmodels.ChangeVaultItem:
    properties:
      key:
        maxLength: 150
        minLength: 3
        type: string
      storage_media:
        enum:
        - Local
        - AWS
        - HCP
        - AzureVault
        type: string
      tags:
        items:
          type: string
        type: array
      type_identity:
        maxLength: 150
        minLength: 3
        type: string
      value:
        maxLength: 150
        minLength: 3
        type: string
      vault_type:
        enum:
        - system
        - common
        - project
        - resource
        - platform
        type: string
    type: object
  viewmodels.ChangeVaultRequest:
    properties:
      force_insert:
        type: boolean
      vault_data:
        $ref: '#/definitions/viewmodels.ChangeVaultItem'
    type: object
  viewmodels.CreatePlatformRequest:
    properties:
      name:
        maxLength: 50
        minLength: 3
        type: string
      property:
        items:
          $ref: '#/definitions/viewmodels.PropertyInfo'
        type: array
      rest:
        maxLength: 50
        minLength: 3
        type: string
      tags:
        items:
          type: string
        type: array
      url:
        maxLength: 150
        minLength: 3
        type: string
    required:
    - name
    - rest
    - url
    type: object
  viewmodels.CreateProjectRequest:
    properties:
      description:
        maxLength: 500
        minLength: 3
        type: string
      end_time:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      start_time:
        type: string
      state:
        enum:
        - preparing
        - processing
        - finished
        type: string
      tags:
        items:
          type: string
        type: array
    required:
    - description
    - name
    type: object
  viewmodels.CreateResourceRequest:
    properties:
      data:
        minLength: 3
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      tags:
        items:
          type: string
        type: array
      type:
        enum:
        - DrawIO
        - Markdown
        - Excalidraw
        - Plate
        type: string
    required:
    - data
    - name
    type: object
  viewmodels.CreateResourceResponse:
    properties:
      id:
        type: string
    type: object
  viewmodels.CreateVaultModel:
    properties:
      key:
        maxLength: 150
        minLength: 3
        type: string
      storage_media:
        enum:
        - Local
        - AWS
        - HCP
        - AzureVault
        type: string
      tags:
        items:
          type: string
        type: array
      type_identity:
        maxLength: 150
        minLength: 3
        type: string
      value:
        maxLength: 150
        minLength: 3
        type: string
      vault_type:
        enum:
        - system
        - common
        - project
        - resource
        - platform
        type: string
    required:
    - key
    - value
    type: object
  viewmodels.CreateVaultsRequest:
    properties:
      force_insert:
        type: boolean
      vaults:
        items:
          $ref: '#/definitions/viewmodels.CreateVaultModel'
        type: array
    required:
    - vaults
    type: object
  viewmodels.CreateVaultsResponse:
    properties:
      vaults:
        items:
          $ref: '#/definitions/viewmodels.VaultView'
        type: array
    type: object
  viewmodels.ImportVaultsRequest:
    properties:
      storage_media:
        enum:
        - AWS
        - HCP
        - AzureVault
        type: string
      type_identity:
        maxLength: 150
        minLength: 3
        type: string
      vault_type:
        enum:
        - system
        - common
        - project
        - resource
        - platform
        type: string
    type: object
  viewmodels.ImportVaultsResponse:
    properties:
      vaults:
        items:
          $ref: '#/definitions/viewmodels.VaultView'
        type: array
    type: object
  viewmodels.PlatformDetailView:
    properties:
      activate:
        type: boolean
      id:
        type: string
      is_deleted:
        type: boolean
      name:
        type: string
      projects:
        items:
          $ref: '#/definitions/viewmodels.PlatformProject'
        type: array
      property:
        items:
          $ref: '#/definitions/viewmodels.Property'
        type: array
      rest_endpoint:
        type: string
      tags:
        items:
          type: string
        type: array
      url:
        type: string
    type: object
  viewmodels.PlatformProject:
    properties:
      id:
        type: string
      name:
        type: string
      property:
        additionalProperties:
          type: string
        type: object
      url:
        type: string
      webhooks:
        items:
          $ref: '#/definitions/viewmodels.Webhook'
        type: array
    type: object
  viewmodels.PlatformView:
    properties:
      activate:
        type: boolean
      id:
        type: string
      is_deleted:
        type: boolean
      name:
        type: string
      rest_endpoint:
        type: string
      tags:
        items:
          type: string
        type: array
      url:
        type: string
    type: object
  viewmodels.ProjectDesign:
    properties:
      description:
        type: string
      name:
        type: string
      resources:
        items:
          type: string
        type: array
    type: object
  viewmodels.ProjectPlatform:
    properties:
      description:
        type: string
      name:
        type: string
      project_id:
        type: string
    type: object
  viewmodels.ProjectView:
    properties:
      description:
        type: string
      designs:
        items:
          $ref: '#/definitions/viewmodels.ProjectDesign'
        type: array
      end_date:
        type: string
      id:
        type: string
      name:
        type: string
      platforms:
        items:
          $ref: '#/definitions/viewmodels.ProjectPlatform'
        type: array
      start_date:
        type: string
      state:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  viewmodels.Property:
    properties:
      key:
        description: vault aliases
        type: string
      mask_value:
        type: string
      vault_id:
        type: string
      vault_key:
        type: string
    type: object
  viewmodels.PropertyInfo:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  viewmodels.ResourceView:
    properties:
      created_at:
        type: string
      data:
        type: string
      id:
        type: string
      is_deleted:
        type: boolean
      name:
        type: string
      tags:
        items:
          type: string
        type: array
      type:
        type: string
      updated_at:
        type: string
      version:
        type: integer
    type: object
  viewmodels.UpdatePlatformProjectRequest:
    properties:
      name:
        maxLength: 50
        minLength: 3
        type: string
      property:
        additionalProperties:
          type: string
        type: object
      url:
        maxLength: 150
        minLength: 3
        type: string
    required:
    - name
    - url
    type: object
  viewmodels.UpdatePlatformRequest:
    properties:
      activate:
        type: boolean
      name:
        maxLength: 50
        minLength: 3
        type: string
      property:
        items:
          $ref: '#/definitions/viewmodels.PropertyInfo'
        type: array
      rest:
        maxLength: 50
        minLength: 3
        type: string
      tags:
        items:
          type: string
        type: array
      url:
        maxLength: 150
        minLength: 3
        type: string
    required:
    - name
    - rest
    - url
    type: object
  viewmodels.UpdatePlatformWebhookRequest:
    properties:
      activate:
        type: boolean
      name:
        maxLength: 50
        minLength: 3
        type: string
      property:
        additionalProperties:
          type: string
        type: object
      state:
        enum:
        - Init
        - Creating
        - Ready
        type: string
      url:
        maxLength: 150
        minLength: 3
        type: string
    required:
    - activate
    - name
    - url
    type: object
  viewmodels.UpdateProjectDesignRequest:
    properties:
      description:
        maxLength: 500
        minLength: 3
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      resources:
        items:
          type: string
        type: array
    required:
    - name
    - resources
    type: object
  viewmodels.UpdateProjectPlatformRequest:
    properties:
      description:
        maxLength: 500
        minLength: 3
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      project_id:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - name
    - project_id
    type: object
  viewmodels.UpdateProjectRequest:
    properties:
      description:
        maxLength: 500
        minLength: 3
        type: string
      end_time:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      start_time:
        type: string
      state:
        enum:
        - preparing
        - processing
        - finished
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  viewmodels.UpdateResourceRequest:
    properties:
      data:
        minLength: 3
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      tags:
        items:
          type: string
        type: array
    required:
    - data
    - name
    type: object
  viewmodels.VaultView:
    properties:
      id:
        type: string
      key:
        type: string
      mask_value:
        type: string
      storage_media:
        type: string
      tags:
        items:
          type: string
        type: array
      type_identity:
        type: string
      vault_type:
        type: string
    type: object
  viewmodels.Webhook:
    properties:
      activate:
        type: boolean
      name:
        type: string
      property:
        additionalProperties:
          type: string
        type: object
      state:
        type: string
      url:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/import_vault:
    post:
      consumes:
      - application/json
      description: import vault
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/viewmodels.ImportVaultsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.ImportVaultsResponse'
      summary: import vault
      tags:
      - Vault
  /v1/platform:
    get:
      consumes:
      - application/json
      description: get all platform
      parameters:
      - description: name - Fuzzy Search
        in: query
        name: name
        type: string
      - description: activate
        in: query
        name: activate
        type: boolean
      - collectionFormat: csv
        description: Tags
        in: query
        items:
          type: string
        name: tags
        type: array
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 100
        description: Page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/viewmodels.PlatformView'
            type: array
      summary: get all platform
      tags:
      - Platform
    post:
      consumes:
      - application/json
      description: create platform
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/viewmodels.CreatePlatformRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.PlatformDetailView'
      summary: create platform
      tags:
      - Platform
  /v1/platform/{id}:
    delete:
      consumes:
      - application/json
      description: delete platform
      parameters:
      - description: Platform ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.PlatformDetailView'
      summary: delete platform
      tags:
      - Platform
    get:
      consumes:
      - application/json
      description: get platform
      parameters:
      - description: Platform ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.PlatformDetailView'
      summary: get platform
      tags:
      - Platform
    put:
      consumes:
      - application/json
      description: update platform
      parameters:
      - description: Platform ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/viewmodels.UpdatePlatformRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.PlatformDetailView'
      summary: update platform
      tags:
      - Platform
  /v1/platform/{id}/project:
    post:
      consumes:
      - application/json
      description: create platform
      parameters:
      - description: Platform ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/viewmodels.UpdatePlatformProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.PlatformDetailView'
      summary: create platform
      tags:
      - Platform
  /v1/platform/{id}/project/{project_id}:
    delete:
      consumes:
      - application/json
      description: delete platform project
      parameters:
      - description: Platform ID
        in: path
        name: id
        required: true
        type: string
      - description: Platform Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.PlatformDetailView'
      summary: delete platform project
      tags:
      - Platform
    put:
      consumes:
      - application/json
      description: update platform project
      parameters:
      - description: Platform ID
        in: path
        name: id
        required: true
        type: string
      - description: Platform Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/viewmodels.UpdatePlatformProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.PlatformDetailView'
      summary: update platform project
      tags:
      - Platform
  /v1/platform/{id}/project/{project_id}/hook:
    put:
      consumes:
      - application/json
      description: update platform webhook
      parameters:
      - description: Platform ID
        in: path
        name: id
        required: true
        type: string
      - description: Platform Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/viewmodels.UpdatePlatformWebhookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.PlatformDetailView'
      summary: update platform webhook
      tags:
      - Platform
  /v1/platform/{id}/project/{project_id}/hook/{hook_name}:
    delete:
      consumes:
      - application/json
      description: delete platform webhook
      parameters:
      - description: Platform ID
        in: path
        name: id
        required: true
        type: string
      - description: Platform Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Webhook Name
        in: path
        name: hook_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.PlatformDetailView'
      summary: delete platform webhook
      tags:
      - Platform
  /v1/project:
    get:
      consumes:
      - application/json
      description: get all project
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/viewmodels.ProjectView'
            type: array
      summary: get all project
      tags:
      - Project
    post:
      consumes:
      - application/json
      description: create project
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/viewmodels.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.ProjectView'
      summary: create project
      tags:
      - Project
  /v1/project/{id}:
    get:
      consumes:
      - application/json
      description: get project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.ProjectView'
      summary: get project
      tags:
      - Project
    put:
      consumes:
      - application/json
      description: update project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/viewmodels.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.ProjectView'
      summary: update project
      tags:
      - Project
  /v1/project/{id}/design:
    put:
      consumes:
      - application/json
      description: update project design
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/viewmodels.UpdateProjectDesignRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.ProjectView'
      summary: update project design
      tags:
      - Project
  /v1/project/{id}/platform:
    put:
      consumes:
      - application/json
      description: update project platform
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          items:
            $ref: '#/definitions/viewmodels.UpdateProjectPlatformRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.ProjectView'
      summary: update project platform
      tags:
      - Project
  /v1/resource:
    get:
      consumes:
      - application/json
      description: get all resources
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/viewmodels.ResourceView'
            type: array
      summary: get all resources
      tags:
      - Resource
    post:
      consumes:
      - application/json
      description: create resource
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/viewmodels.CreateResourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.CreateResourceResponse'
      summary: create resource
      tags:
      - Resource
  /v1/resource/{id}:
    delete:
      consumes:
      - application/json
      description: delete resource
      parameters:
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: delete resource
      tags:
      - Resource
    get:
      consumes:
      - application/json
      description: get resource
      parameters:
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.ResourceView'
      summary: get resource
      tags:
      - Resource
    put:
      consumes:
      - application/json
      description: update resource
      parameters:
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/viewmodels.UpdateResourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: update resource
      tags:
      - Resource
  /v1/resource/{id}/history:
    get:
      consumes:
      - application/json
      description: get resource history
      parameters:
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/viewmodels.ResourceView'
            type: array
      summary: get resource history
      tags:
      - Resource
  /v1/test/circleci:
    get:
      consumes:
      - application/json
      description: circle CI
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: circle CI
      tags:
      - Test
  /v1/test/cqrstest:
    get:
      consumes:
      - application/json
      description: cqrstest
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: cqrstest
      tags:
      - Test
  /v1/test/ping:
    get:
      consumes:
      - application/json
      description: ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: ping
      tags:
      - Test
  /v1/test/tf:
    get:
      consumes:
      - application/json
      description: terraform
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: terraform
      tags:
      - Test
  /v1/test/vault:
    get:
      consumes:
      - application/json
      description: vault
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/secret_service.OpenAppSecretOK'
      summary: vault
      tags:
      - Test
  /v1/test/vercel:
    get:
      consumes:
      - application/json
      description: vercel
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: vercel
      tags:
      - Test
  /v1/test/workflow:
    get:
      consumes:
      - application/json
      description: workflow
      parameters:
      - description: github owner
        in: query
        name: owner
        required: true
        type: string
      - description: github repository
        in: query
        name: repo
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: workflow
      tags:
      - Test
  /v1/vault:
    get:
      consumes:
      - application/json
      description: get vault
      parameters:
      - description: Key - Fuzzy Search
        in: query
        name: key
        type: string
      - description: Storage Media
        in: query
        name: storage_media
        type: string
      - collectionFormat: csv
        description: Tags
        in: query
        items:
          type: string
        name: tags
        type: array
      - description: Type Identity
        in: query
        name: type_identity
        type: string
      - description: Vault Type
        in: query
        name: vault_type
        type: string
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 100
        description: Page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/viewmodels.VaultView'
            type: array
      summary: get vault
      tags:
      - Vault
    post:
      consumes:
      - application/json
      description: create vault
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/viewmodels.CreateVaultsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.CreateVaultsResponse'
      summary: create vault
      tags:
      - Vault
  /v1/vault/{id}:
    delete:
      consumes:
      - application/json
      description: delete vault
      parameters:
      - description: vault ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
      summary: delete vault
      tags:
      - Vault
    put:
      consumes:
      - application/json
      description: update vault
      parameters:
      - description: vault ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/viewmodels.ChangeVaultRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/viewmodels.VaultView'
      summary: update vault
      tags:
      - Vault
  /v1/vault/{id}/show:
    post:
      consumes:
      - application/json
      description: show vault value
      parameters:
      - description: vault ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: show vault value
      tags:
      - Vault
  /v2/platform:
    post:
      consumes:
      - application/json
      description: create platform v2
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/command.CreatePlatformCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: create platform v2
      tags:
      - Platform v2
swagger: "2.0"
