definitions:
  application.CreatePlatformRequest:
    properties:
      name:
        type: string
      property:
        additionalProperties:
          type: string
        type: object
      rest:
        type: string
      url:
        type: string
    type: object
  application.CreateResourceRequest:
    properties:
      data:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  application.ResourceDetail:
    properties:
      created_at:
        type: string
      data:
        type: string
      id:
        type: string
      is_delete:
        type: boolean
      name:
        type: string
      type:
        type: string
    type: object
  application.UpdateResourceRequest:
    properties:
      data:
        type: string
      id:
        type: string
    type: object
  application.UpdatelatformRequest:
    properties:
      activate:
        type: boolean
      name:
        type: string
      property:
        additionalProperties:
          type: string
        type: object
      rest:
        type: string
      url:
        type: string
    type: object
  platform.Platform:
    properties:
      activate:
        type: boolean
      name:
        type: string
      property:
        additionalProperties:
          type: string
        type: object
      rest_endpoint:
        type: string
      url:
        type: string
      webhooks:
        items:
          $ref: '#/definitions/platform.Webhook'
        type: array
    type: object
  platform.Webhook:
    properties:
      activate:
        type: boolean
      name:
        type: string
      property:
        additionalProperties:
          type: string
        type: object
      state: {}
      url:
        type: string
    type: object
  resource.Resource:
    properties:
      created_at:
        type: string
      data:
        type: string
      is_delete:
        type: boolean
      name:
        type: string
      type: {}
    type: object
info:
  contact: {}
paths:
  /platform:
    post:
      consumes:
      - application/json
      description: create platform
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/application.CreatePlatformRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: create platform
      tags:
      - Platform
  /platform/{id}:
    get:
      consumes:
      - application/json
      description: get platform
      parameters:
      - description: Platform ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/platform.Platform'
      summary: get platform
      tags:
      - Platform
    put:
      consumes:
      - application/json
      description: update platform
      parameters:
      - description: Platform ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/application.UpdatelatformRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: update platform
      tags:
      - Platform
  /platform/{id}/hook:
    put:
      consumes:
      - application/json
      description: update platform webhook
      parameters:
      - description: Platform ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/platform.Webhook'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: update platform webhook
      tags:
      - Platform
  /resource:
    get:
      consumes:
      - application/json
      description: get all resources
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/application.ResourceDetail'
            type: array
      summary: get all resources
      tags:
      - Resource
    post:
      consumes:
      - application/json
      description: create resource
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/application.CreateResourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: create resource
      tags:
      - Resource
    put:
      consumes:
      - application/json
      description: update resource
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/application.UpdateResourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: update resource
      tags:
      - Resource
  /resource/{id}:
    delete:
      consumes:
      - application/json
      description: delete resource
      parameters:
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: delete resource
      tags:
      - Resource
    get:
      consumes:
      - application/json
      description: get resource
      parameters:
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/resource.Resource'
      summary: get resource
      tags:
      - Resource
  /resource/{id}/history:
    get:
      consumes:
      - application/json
      description: get resource history
      parameters:
      - description: Resource ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/resource.Resource'
            type: array
      summary: get resource history
      tags:
      - Resource
swagger: "2.0"
