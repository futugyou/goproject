{
    "swagger": "2.0",
    "info": {
        "title": "openai web API",
        "description": "provider some api for openai demo.\n",
        "version": "1.0.0",
        "contact": {}
    },
    "basePath": "/api/v1",
    "securityDefinitions": {
      "OauthSecurity": {
        "type": "oauth2",
        "flow": "accessCode",
        "authorizationUrl": "https://identity-center.vercel.app/authorize",
        "tokenUrl": "https://identity-center.vercel.app/token",
        "scopes": {
          "all": "all scope",
          "openai": "openai scope"
        }
      }
    },
    "security": [
      {
        "OauthSecurity": [
          "all"
        ]
      }
    ],
    "paths": {
        "/autio/transcription": {
            "post": {
                "tags": [
                    "autio"
                ],
                "description": "create audio transcription\n\u003cbr\u003e",
                "operationId": "AudioController.CreateAudioTranscription",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for create audio transcription content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/openai.AudioTranscriptionNewParams"
                        }
                    },
                    {
                        "in": "query",
                        "name": "request",
                        "schema": {
                            "$ref": "#/definitions/openai.AudioTranscriptionNewParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/openai.CreateAudioTranscriptionResponse"
                        }
                    }
                }
            }
        },
        "/autio/translation": {
            "post": {
                "tags": [
                    "autio"
                ],
                "description": "create audio translation\n\u003cbr\u003e",
                "operationId": "AudioController.CreateAudioTranslation",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for create audio translation content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/openai.AudioTranslationNewParams"
                        }
                    },
                    {
                        "in": "query",
                        "name": "request",
                        "schema": {
                            "$ref": "#/definitions/openai.AudioTranslationNewParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/openai.CreateAudioTranslationResponse"
                        }
                    }
                }
            }
        },
        "/chat/": {
            "post": {
                "tags": [
                    "chat"
                ],
                "description": "create chat\n\u003cbr\u003e",
                "operationId": "ChatController.CreateChat",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for create chat content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CreateChatRequest"
                        }
                    },
                    {
                        "in": "query",
                        "name": "request",
                        "schema": {
                            "$ref": "#/definitions/services.CreateChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/services.CreateChatResponse"
                        }
                    }
                }
            }
        },
        "/chat/sse": {
            "post": {
                "tags": [
                    "chat"
                ],
                "description": "Create Chat Stream\n\u003cbr\u003e",
                "operationId": "ChatController.Create Chat With SSE",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for create Chat content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CreateChatRequest"
                        }
                    }
                ]
            }
        },
        "/completions/": {
            "post": {
                "tags": [
                    "completions"
                ],
                "description": "create completion\n\u003cbr\u003e",
                "operationId": "CompletionController.Create Completion",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for create completion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CompletionModel"
                        }
                    }
                ]
            }
        },
        "/completions/sse": {
            "post": {
                "tags": [
                    "completions"
                ],
                "description": "create completion stream\n\u003cbr\u003e",
                "operationId": "CompletionController.Create Completion With SSE",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for create completion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CompletionModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/services.CreateCompletionResponse"
                        }
                    }
                }
            }
        },
        "/edits/": {
            "post": {
                "tags": [
                    "edits"
                ],
                "description": "create edit\n\u003cbr\u003e",
                "operationId": "EditController.Create edit",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for create edit content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CreateEditsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{test} \tstring"
                    }
                }
            }
        },
        "/examples/": {
            "get": {
                "tags": [
                    "examples"
                ],
                "operationId": "ExampleController.get all examples",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/services.ExampleModel"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "examples"
                ],
                "operationId": "ExampleController.create examples",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for create example content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.ExampleModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/services.ExampleModel[]"
                        }
                    }
                }
            }
        },
        "/examples/init": {
            "post": {
                "tags": [
                    "examples"
                ],
                "operationId": "ExampleController.init examples",
                "responses": {
                    "200": {
                        "description": "{string}"
                    }
                }
            }
        },
        "/examples/reset": {
            "post": {
                "tags": [
                    "examples"
                ],
                "operationId": "ExampleController.set examples",
                "responses": {
                    "200": {
                        "description": "{string}"
                    }
                }
            }
        },
        "/fine-tune/{fine_tune_id}/events": {
            "get": {
                "tags": [
                    "fine-tune"
                ],
                "description": "get fine tune by fine_tune_id\n\u003cbr\u003e",
                "operationId": "FineTuneController.Get Fine Tune Events",
                "parameters": [
                    {
                        "in": "path",
                        "name": "fine_tune_id",
                        "description": "The key for fine_tune",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/openai.FineTuningJob"
                        }
                    },
                    "403": {
                        "description": "fine_tune_id is empty"
                    }
                }
            }
        },
        "/model/": {
            "get": {
                "tags": [
                    "model"
                ],
                "description": "list model\n\u003cbr\u003e",
                "operationId": "ModelController.ListModel",
                "responses": {
                    "200": {
                        "description": "{list model} \t[]string"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CompletionModel": {
            "title": "CompletionModel",
            "type": "object",
            "properties": {
                "best_of": {
                    "type": "integer",
                    "format": "int64"
                },
                "echo": {
                    "type": "boolean"
                },
                "frequency_penalty": {
                    "type": "number",
                    "format": "double"
                },
                "logprobs": {
                    "type": "integer",
                    "format": "int64"
                },
                "max_tokens": {
                    "type": "integer",
                    "format": "int64"
                },
                "model": {
                    "type": "string"
                },
                "presence_penalty": {
                    "type": "number",
                    "format": "double"
                },
                "prompt": {
                    "type": "string"
                },
                "stop": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stream": {
                    "type": "boolean"
                },
                "suffix": {
                    "type": "string"
                },
                "temperature": {
                    "type": "number",
                    "format": "double"
                },
                "top_p": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Object": {
            "title": "Object",
            "type": "object"
        },
        "models.User": {
            "title": "User",
            "type": "object"
        },
        "openai.AudioTranscriptionNewParams": {
            "title": "AudioTranscriptionNewParams",
            "type": "object"
        },
        "openai.AudioTranslationNewParams": {
            "title": "AudioTranslationNewParams",
            "type": "object"
        },
        "openai.CreateAudioTranscriptionResponse": {
            "title": "CreateAudioTranscriptionResponse",
            "type": "object"
        },
        "openai.CreateAudioTranslationResponse": {
            "title": "CreateAudioTranslationResponse",
            "type": "object"
        },
        "openai.FineTuningJob": {
            "title": "FineTuningJob",
            "type": "object"
        },
        "services.Chat": {
            "title": "Chat",
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "services.CreateChatRequest": {
            "title": "CreateChatRequest",
            "type": "object",
            "properties": {
                "frequency_penalty": {
                    "type": "number",
                    "format": "double"
                },
                "max_tokens": {
                    "type": "integer",
                    "format": "int64"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.Chat"
                    }
                },
                "model": {
                    "type": "string"
                },
                "presence_penalty": {
                    "type": "number",
                    "format": "double"
                },
                "temperature": {
                    "type": "number",
                    "format": "double"
                },
                "top_p": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "services.CreateChatResponse": {
            "title": "CreateChatResponse",
            "type": "object",
            "properties": {
                "completion_tokens": {
                    "type": "integer",
                    "format": "int64"
                },
                "created": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.Chat"
                    }
                },
                "prompt_tokens": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_tokens": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "services.CreateCompletionResponse": {
            "title": "CreateCompletionResponse",
            "type": "object",
            "properties": {
                "completion_tokens": {
                    "type": "integer",
                    "format": "int64"
                },
                "created": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "prompt_tokens": {
                    "type": "integer",
                    "format": "int64"
                },
                "texts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "total_tokens": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "services.CreateEditsRequest": {
            "title": "CreateEditsRequest",
            "type": "object",
            "properties": {
                "input": {
                    "type": "string"
                },
                "instruction": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "n": {
                    "type": "integer",
                    "format": "int64"
                },
                "temperature": {
                    "type": "number",
                    "format": "double"
                },
                "top_p": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "services.ExampleModel": {
            "title": "ExampleModel",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "frequency_penalty": {
                    "type": "number",
                    "format": "double"
                },
                "key": {
                    "type": "string"
                },
                "max_tokens": {
                    "type": "integer",
                    "format": "int64"
                },
                "model": {
                    "type": "string"
                },
                "presence_penalty": {
                    "type": "number",
                    "format": "double"
                },
                "prompt": {
                    "type": "string"
                },
                "sample_response": {
                    "type": "string"
                },
                "stop": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subTitle": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "temperature": {
                    "type": "number",
                    "format": "double"
                },
                "title": {
                    "type": "string"
                },
                "top_p": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "services.ExampleModel[]": {
            "title": "ExampleModel[]",
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "model",
            "description": "Operations about Models\n"
        },
        {
            "name": "chat",
            "description": "Operations about Chat\n"
        },
        {
            "name": "fine-tune",
            "description": "Operations about fine tune\n"
        },
        {
            "name": "autio",
            "description": "Operations about Chat\n"
        },
        {
            "name": "examples",
            "description": "Operations about Examples\n"
        },
        {
            "name": "completions",
            "description": "Operations about completion\n"
        },
        {
            "name": "edits",
            "description": "Operations about edit\n"
        }
    ]
}