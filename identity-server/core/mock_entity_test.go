// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/futugyousuzu/identity-server/core (interfaces: IEntity)

// Package core_test is a generated GoMock package.
package core_test

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIEntity is a mock of IEntity interface.
type MockIEntity struct {
	ctrl     *gomock.Controller
	recorder *MockIEntityMockRecorder
}

// MockIEntityMockRecorder is the mock recorder for MockIEntity.
type MockIEntityMockRecorder struct {
	mock *MockIEntity
}

// NewMockIEntity creates a new mock instance.
func NewMockIEntity(ctrl *gomock.Controller) *MockIEntity {
	mock := &MockIEntity{ctrl: ctrl}
	mock.recorder = &MockIEntityMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEntity) EXPECT() *MockIEntityMockRecorder {
	return m.recorder
}

// GetType mocks base method.
func (m *MockIEntity) GetType() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetType")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetType indicates an expected call of GetType.
func (mr *MockIEntityMockRecorder) GetType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetType", reflect.TypeOf((*MockIEntity)(nil).GetType))
}
